# This is not yet complete
grammar ObjLang
  rule program
    blank?
    (top_stmt / blank)*
    blank?
  end

  rule top_stmt
    class_def / meth_def / stmt
  end

  rule stmt
    blank? ( compound_expr / simple_expr nl )
  end

  rule expr
    compound_expr / simple_expr
  end

  rule compound_expr
    meth_def / if_expr
  end

  rule if_expr
    'if' sp expr sp? nl stmt*
    (blank? 'elsif' sp expr sp? nl stmt*)*
    (blank? 'else' sp? nl stmt*)?
    blank? end_kw nl
  end

  rule simple_expr
    integer / varref
  end

  # Expressions
  rule class_def
    class_kw sp
    const_id (sp? '<' sp? const_id)? sp? nl
    (stmt / blank)*
    end_kw nl
  end

  rule meth_def
    def_kw sp
    id sp? '(' ( sp? id ( sp? ',' sp? id )* )? sp? ')' nl
    (stmt / blank)*
    end_kw nl
  end

  rule integer
    [0-9]+
  end

  rule varref
    !'end' id
  end

  # Keywords
  rule class_kw
    'class'
  end
  rule def_kw
    'def'
  end
  rule end_kw
    'end'
  end

  # Identifiers
  rule const_id
    [A-Z] [A-Za-z_]*
  end
  rule id
    [A-Za-z_]+
  end

  # Three different classes of whitespace
  rule sp
    [ \t]+
  end
  rule blank
    [ \t\n]+
  end
  rule nl
    [\n]
  end
end
